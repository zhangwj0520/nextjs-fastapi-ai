{"url": "/Users/zhangweijie/AI/nextjs-fastapi-ai/qwen_agent_examples/resource/doc.pdf", "raw": [{"content": "# Python Image Processing Tutorial: Downloading Images and Performing Flip Operations \n\nIn  this  tutorial,  we  will  learn  how  to  download  images  using  Python  and  perform  basic  image \noperations such as flipping and rotating using the Pillow library. \n ## Prerequisites \n Before we begin, make sure you have the following libraries installed in your Python environment: \n\n- `requests`: for downloading images \n- `Pillow`: for image processing \n If you haven't installed these libraries yet, you can install them using pip: \n\n```bash \npip install requests Pillow \n``` \n ## Step 1: Downloading an Image \n First, we need to download an image. We will use the `requests` library to accomplish this task. \n\n``` \nimport requests \n\ndef download_image(url, filename): \n\tresponse = requests.get(url) \n\tif response.status_code == 200: \n\twith open(filename, 'wb') as file: \n\tfile.write(response.content) \n\telse: \n\tprint(f\"Error: Failed to download image from {url}\") \n\n# Example usage \nimage_url = \"https://example.com/image.jpg\"    # Replace with the URL of the image you want to \ndownload \nfilename = \"downloaded_image.jpg\" \ndownload_image(image_url, filename) \n``` \n ## Step 2: Opening and Displaying the Image \n Next, we will use the `Pillow` library to open and display the image we just downloaded. \n\n``` \nfrom PIL import Image \n\ndef open_and_show_image(filename): \n\timage = Image.open(filename) \n\timage.show() \n\n# Example usage \nopen_and_show_image(filename) \n``` \n ## Step 3: Flipping and Rotating the Image \n\nNow we can perform flip and rotate operations on the image. The `Pillow` library provides several \nmethods for image manipulation. \n\n``` \ndef flip_image(filename, mode='horizontal'): \n\timage = Image.open(filename) \n\tif mode == 'horizontal': \n\tflipped_image = image.transpose(Image.FLIP_LEFT_RIGHT) \n\telif mode == 'vertical': \n\tflipped_image = image.transpose(Image.FLIP_TOP_BOTTOM) \n\telse: \n\tprint(\"Error: Mode should be 'horizontal' or 'vertical'\") \n\treturn \n\tflipped_image.show() \n\treturn flipped_image \n\ndef rotate_image(filename, degrees): \n\timage = Image.open(filename) \n\trotated_image = image.rotate(degrees) \n\trotated_image.show() \n\treturn rotated_image \n\n# Example usage \nflipped_image = flip_image(filename, mode='horizontal')    # Horizontally flip \nflipped_image.save(\"flipped_horizontal.jpg\")    # Save the horizontally flipped image \n\nflipped_image = flip_image(filename, mode='vertical')    # Vertically flip \nflipped_image.save(\"flipped_vertical.jpg\")    # Save the vertically flipped image \n\nrotated_image = rotate_image(filename, 90)    # Rotate by 90 degrees \nrotated_image.save(\"rotated_90.jpg\")    # Save the rotated image \n\n``` \n ## Step 4: Saving the Modified Image \n\nIn the examples above, we have seen how to save flipped and rotated images. You can use the \n`save` method to save any modified image. \n\n``` \n# Save the image \ndef save_image(image, filename): \n\timage.save(filename) \n\n# Example usage \nsave_image(flipped_image, \"flipped_image.jpg\") \nsave_image(rotated_image, \"rotated_image.jpg\") \n``` \n\nBy  now,  you  have  learned  how  to  download  images  using  Python  and  perform  basic  image \noperations using the Pillow library. You can extend these basics to implement more complex image \nprocessing functions as needed. \n", "metadata": {"source": "/Users/zhangweijie/AI/nextjs-fastapi-ai/qwen_agent_examples/resource/doc.pdf", "title": "doc.pdf", "chunk_id": 0}, "token": 783}], "title": "doc.pdf"}